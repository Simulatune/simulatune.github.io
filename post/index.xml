<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Simulatune&#39;s Web Page</title>
    <link>https://simulatune.github.io/post/</link>
    <description>Recent content in Posts on Simulatune&#39;s Web Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 07 Oct 2022 20:22:00 +0800</lastBuildDate>
    
	<atom:link href="https://simulatune.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design Patterns</title>
      <link>https://simulatune.github.io/post/2022/10/design_pattern/</link>
      <pubDate>Fri, 07 Oct 2022 20:22:00 +0800</pubDate>
      
      <guid>https://simulatune.github.io/post/2022/10/design_pattern/</guid>
      <description>Design Patterns Creational patterns Creational patterns provide the capability to create objects based on a required criterion and in a controlled way.
Singleton Ensure a class has only one instance, and provide a global point of access to it.
1 2 3 4 5 6 7 8 9 10 11 12 13  @startuml skinparam dpi 500 skinparam defaultFontName PT Mono class Singleton { - Singleton() + static getInstance():Singleton } Singleton &amp;lt;.</description>
    </item>
    
  </channel>
</rss>